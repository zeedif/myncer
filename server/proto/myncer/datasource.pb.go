// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: myncer/datasource.proto

package myncer_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Datasource int32

const (
	Datasource_DATASOURCE_UNSPECIFIED Datasource = 0
	Datasource_DATASOURCE_SPOTIFY     Datasource = 1
	Datasource_DATASOURCE_YOUTUBE     Datasource = 2
)

// Enum value maps for Datasource.
var (
	Datasource_name = map[int32]string{
		0: "DATASOURCE_UNSPECIFIED",
		1: "DATASOURCE_SPOTIFY",
		2: "DATASOURCE_YOUTUBE",
	}
	Datasource_value = map[string]int32{
		"DATASOURCE_UNSPECIFIED": 0,
		"DATASOURCE_SPOTIFY":     1,
		"DATASOURCE_YOUTUBE":     2,
	}
)

func (x Datasource) Enum() *Datasource {
	p := new(Datasource)
	*p = x
	return p
}

func (x Datasource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Datasource) Descriptor() protoreflect.EnumDescriptor {
	return file_myncer_datasource_proto_enumTypes[0].Descriptor()
}

func (Datasource) Type() protoreflect.EnumType {
	return &file_myncer_datasource_proto_enumTypes[0]
}

func (x Datasource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Datasource.Descriptor instead.
func (Datasource) EnumDescriptor() ([]byte, []int) {
	return file_myncer_datasource_proto_rawDescGZIP(), []int{0}
}

type OAuthExchangeStatus int32

const (
	OAuthExchangeStatus_O_AUTH_EXCHANGE_STATUS_UNSPECIFIED OAuthExchangeStatus = 0
	OAuthExchangeStatus_O_AUTH_EXCHANGE_STATUS_SUCCESS     OAuthExchangeStatus = 1
	OAuthExchangeStatus_O_AUTH_EXCHANGE_STATUS_FAILURE     OAuthExchangeStatus = 2
)

// Enum value maps for OAuthExchangeStatus.
var (
	OAuthExchangeStatus_name = map[int32]string{
		0: "O_AUTH_EXCHANGE_STATUS_UNSPECIFIED",
		1: "O_AUTH_EXCHANGE_STATUS_SUCCESS",
		2: "O_AUTH_EXCHANGE_STATUS_FAILURE",
	}
	OAuthExchangeStatus_value = map[string]int32{
		"O_AUTH_EXCHANGE_STATUS_UNSPECIFIED": 0,
		"O_AUTH_EXCHANGE_STATUS_SUCCESS":     1,
		"O_AUTH_EXCHANGE_STATUS_FAILURE":     2,
	}
)

func (x OAuthExchangeStatus) Enum() *OAuthExchangeStatus {
	p := new(OAuthExchangeStatus)
	*p = x
	return p
}

func (x OAuthExchangeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OAuthExchangeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_myncer_datasource_proto_enumTypes[1].Descriptor()
}

func (OAuthExchangeStatus) Type() protoreflect.EnumType {
	return &file_myncer_datasource_proto_enumTypes[1]
}

func (x OAuthExchangeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OAuthExchangeStatus.Descriptor instead.
func (OAuthExchangeStatus) EnumDescriptor() ([]byte, []int) {
	return file_myncer_datasource_proto_rawDescGZIP(), []int{1}
}

type ExchangeOAuthCodeRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Datasource Datasource             `protobuf:"varint,1,opt,name=datasource,proto3,enum=myncer.Datasource" json:"datasource,omitempty"`
	// The authorization code returned by the datasource.
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	// Optional CSRF protection token returned from the datasource.
	CsrfToken     string `protobuf:"bytes,3,opt,name=csrf_token,json=csrfToken,proto3" json:"csrf_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExchangeOAuthCodeRequest) Reset() {
	*x = ExchangeOAuthCodeRequest{}
	mi := &file_myncer_datasource_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeOAuthCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeOAuthCodeRequest) ProtoMessage() {}

func (x *ExchangeOAuthCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myncer_datasource_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeOAuthCodeRequest.ProtoReflect.Descriptor instead.
func (*ExchangeOAuthCodeRequest) Descriptor() ([]byte, []int) {
	return file_myncer_datasource_proto_rawDescGZIP(), []int{0}
}

func (x *ExchangeOAuthCodeRequest) GetDatasource() Datasource {
	if x != nil {
		return x.Datasource
	}
	return Datasource_DATASOURCE_UNSPECIFIED
}

func (x *ExchangeOAuthCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ExchangeOAuthCodeRequest) GetCsrfToken() string {
	if x != nil {
		return x.CsrfToken
	}
	return ""
}

type ExchangeOAuthCodeResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ErrorMessage        string                 `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	OauthExchangeStatus OAuthExchangeStatus    `protobuf:"varint,2,opt,name=oauth_exchange_status,json=oauthExchangeStatus,proto3,enum=myncer.OAuthExchangeStatus" json:"oauth_exchange_status,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ExchangeOAuthCodeResponse) Reset() {
	*x = ExchangeOAuthCodeResponse{}
	mi := &file_myncer_datasource_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeOAuthCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeOAuthCodeResponse) ProtoMessage() {}

func (x *ExchangeOAuthCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_myncer_datasource_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeOAuthCodeResponse.ProtoReflect.Descriptor instead.
func (*ExchangeOAuthCodeResponse) Descriptor() ([]byte, []int) {
	return file_myncer_datasource_proto_rawDescGZIP(), []int{1}
}

func (x *ExchangeOAuthCodeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ExchangeOAuthCodeResponse) GetOauthExchangeStatus() OAuthExchangeStatus {
	if x != nil {
		return x.OauthExchangeStatus
	}
	return OAuthExchangeStatus_O_AUTH_EXCHANGE_STATUS_UNSPECIFIED
}

type ListDatasourcesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDatasourcesRequest) Reset() {
	*x = ListDatasourcesRequest{}
	mi := &file_myncer_datasource_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDatasourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasourcesRequest) ProtoMessage() {}

func (x *ListDatasourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myncer_datasource_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasourcesRequest.ProtoReflect.Descriptor instead.
func (*ListDatasourcesRequest) Descriptor() ([]byte, []int) {
	return file_myncer_datasource_proto_rawDescGZIP(), []int{2}
}

type ListDatasourcesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Datasources   []Datasource           `protobuf:"varint,1,rep,packed,name=datasources,proto3,enum=myncer.Datasource" json:"datasources,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDatasourcesResponse) Reset() {
	*x = ListDatasourcesResponse{}
	mi := &file_myncer_datasource_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDatasourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasourcesResponse) ProtoMessage() {}

func (x *ListDatasourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_myncer_datasource_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasourcesResponse.ProtoReflect.Descriptor instead.
func (*ListDatasourcesResponse) Descriptor() ([]byte, []int) {
	return file_myncer_datasource_proto_rawDescGZIP(), []int{3}
}

func (x *ListDatasourcesResponse) GetDatasources() []Datasource {
	if x != nil {
		return x.Datasources
	}
	return nil
}

type ListPlaylistsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Datasource    Datasource             `protobuf:"varint,1,opt,name=datasource,proto3,enum=myncer.Datasource" json:"datasource,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPlaylistsRequest) Reset() {
	*x = ListPlaylistsRequest{}
	mi := &file_myncer_datasource_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPlaylistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlaylistsRequest) ProtoMessage() {}

func (x *ListPlaylistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myncer_datasource_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlaylistsRequest.ProtoReflect.Descriptor instead.
func (*ListPlaylistsRequest) Descriptor() ([]byte, []int) {
	return file_myncer_datasource_proto_rawDescGZIP(), []int{4}
}

func (x *ListPlaylistsRequest) GetDatasource() Datasource {
	if x != nil {
		return x.Datasource
	}
	return Datasource_DATASOURCE_UNSPECIFIED
}

type Playlist struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	MusicSource *MusicSource           `protobuf:"bytes,1,opt,name=music_source,json=musicSource,proto3" json:"music_source,omitempty"`
	// Human readable name of the playlist as stored in the original datasource.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Human readable description of the playlist as stored in the original datasource.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// URL to the playlist image as stored in the original datasource.
	ImageUrl      string `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"` // next: 5
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Playlist) Reset() {
	*x = Playlist{}
	mi := &file_myncer_datasource_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Playlist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Playlist) ProtoMessage() {}

func (x *Playlist) ProtoReflect() protoreflect.Message {
	mi := &file_myncer_datasource_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Playlist.ProtoReflect.Descriptor instead.
func (*Playlist) Descriptor() ([]byte, []int) {
	return file_myncer_datasource_proto_rawDescGZIP(), []int{5}
}

func (x *Playlist) GetMusicSource() *MusicSource {
	if x != nil {
		return x.MusicSource
	}
	return nil
}

func (x *Playlist) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Playlist) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Playlist) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type ListPlaylistsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of playlists attached to the datasource.
	Playlist      []*Playlist `protobuf:"bytes,1,rep,name=playlist,proto3" json:"playlist,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPlaylistsResponse) Reset() {
	*x = ListPlaylistsResponse{}
	mi := &file_myncer_datasource_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPlaylistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlaylistsResponse) ProtoMessage() {}

func (x *ListPlaylistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_myncer_datasource_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlaylistsResponse.ProtoReflect.Descriptor instead.
func (*ListPlaylistsResponse) Descriptor() ([]byte, []int) {
	return file_myncer_datasource_proto_rawDescGZIP(), []int{6}
}

func (x *ListPlaylistsResponse) GetPlaylist() []*Playlist {
	if x != nil {
		return x.Playlist
	}
	return nil
}

type GetPlaylistDetailsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The datasource of the playlist.
	Datasource Datasource `protobuf:"varint,1,opt,name=datasource,proto3,enum=myncer.Datasource" json:"datasource,omitempty"`
	// The unique, stable identifier of the playlist for the datasource.
	PlaylistId    string `protobuf:"bytes,2,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlaylistDetailsRequest) Reset() {
	*x = GetPlaylistDetailsRequest{}
	mi := &file_myncer_datasource_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlaylistDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaylistDetailsRequest) ProtoMessage() {}

func (x *GetPlaylistDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myncer_datasource_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaylistDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetPlaylistDetailsRequest) Descriptor() ([]byte, []int) {
	return file_myncer_datasource_proto_rawDescGZIP(), []int{7}
}

func (x *GetPlaylistDetailsRequest) GetDatasource() Datasource {
	if x != nil {
		return x.Datasource
	}
	return Datasource_DATASOURCE_UNSPECIFIED
}

func (x *GetPlaylistDetailsRequest) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

type GetPlaylistDetailsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Details of the specified playlist.
	Playlist      *Playlist `protobuf:"bytes,1,opt,name=playlist,proto3" json:"playlist,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlaylistDetailsResponse) Reset() {
	*x = GetPlaylistDetailsResponse{}
	mi := &file_myncer_datasource_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlaylistDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaylistDetailsResponse) ProtoMessage() {}

func (x *GetPlaylistDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_myncer_datasource_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaylistDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetPlaylistDetailsResponse) Descriptor() ([]byte, []int) {
	return file_myncer_datasource_proto_rawDescGZIP(), []int{8}
}

func (x *GetPlaylistDetailsResponse) GetPlaylist() *Playlist {
	if x != nil {
		return x.Playlist
	}
	return nil
}

type MusicSource struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Datasource Datasource             `protobuf:"varint,1,opt,name=datasource,proto3,enum=myncer.Datasource" json:"datasource,omitempty"`
	// Unique, stable playlist identifier for the datasource.
	PlaylistId    string `protobuf:"bytes,2,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"` // next: 3
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MusicSource) Reset() {
	*x = MusicSource{}
	mi := &file_myncer_datasource_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MusicSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicSource) ProtoMessage() {}

func (x *MusicSource) ProtoReflect() protoreflect.Message {
	mi := &file_myncer_datasource_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicSource.ProtoReflect.Descriptor instead.
func (*MusicSource) Descriptor() ([]byte, []int) {
	return file_myncer_datasource_proto_rawDescGZIP(), []int{9}
}

func (x *MusicSource) GetDatasource() Datasource {
	if x != nil {
		return x.Datasource
	}
	return Datasource_DATASOURCE_UNSPECIFIED
}

func (x *MusicSource) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

var File_myncer_datasource_proto protoreflect.FileDescriptor

const file_myncer_datasource_proto_rawDesc = "" +
	"\n" +
	"\x17myncer/datasource.proto\x12\x06myncer\"\x81\x01\n" +
	"\x18ExchangeOAuthCodeRequest\x122\n" +
	"\n" +
	"datasource\x18\x01 \x01(\x0e2\x12.myncer.DatasourceR\n" +
	"datasource\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x1d\n" +
	"\n" +
	"csrf_token\x18\x03 \x01(\tR\tcsrfToken\"\x91\x01\n" +
	"\x19ExchangeOAuthCodeResponse\x12#\n" +
	"\rerror_message\x18\x01 \x01(\tR\ferrorMessage\x12O\n" +
	"\x15oauth_exchange_status\x18\x02 \x01(\x0e2\x1b.myncer.OAuthExchangeStatusR\x13oauthExchangeStatus\"\x18\n" +
	"\x16ListDatasourcesRequest\"O\n" +
	"\x17ListDatasourcesResponse\x124\n" +
	"\vdatasources\x18\x01 \x03(\x0e2\x12.myncer.DatasourceR\vdatasources\"J\n" +
	"\x14ListPlaylistsRequest\x122\n" +
	"\n" +
	"datasource\x18\x01 \x01(\x0e2\x12.myncer.DatasourceR\n" +
	"datasource\"\x95\x01\n" +
	"\bPlaylist\x126\n" +
	"\fmusic_source\x18\x01 \x01(\v2\x13.myncer.MusicSourceR\vmusicSource\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1b\n" +
	"\timage_url\x18\x04 \x01(\tR\bimageUrl\"E\n" +
	"\x15ListPlaylistsResponse\x12,\n" +
	"\bplaylist\x18\x01 \x03(\v2\x10.myncer.PlaylistR\bplaylist\"p\n" +
	"\x19GetPlaylistDetailsRequest\x122\n" +
	"\n" +
	"datasource\x18\x01 \x01(\x0e2\x12.myncer.DatasourceR\n" +
	"datasource\x12\x1f\n" +
	"\vplaylist_id\x18\x02 \x01(\tR\n" +
	"playlistId\"J\n" +
	"\x1aGetPlaylistDetailsResponse\x12,\n" +
	"\bplaylist\x18\x01 \x01(\v2\x10.myncer.PlaylistR\bplaylist\"b\n" +
	"\vMusicSource\x122\n" +
	"\n" +
	"datasource\x18\x01 \x01(\x0e2\x12.myncer.DatasourceR\n" +
	"datasource\x12\x1f\n" +
	"\vplaylist_id\x18\x02 \x01(\tR\n" +
	"playlistId*X\n" +
	"\n" +
	"Datasource\x12\x1a\n" +
	"\x16DATASOURCE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12DATASOURCE_SPOTIFY\x10\x01\x12\x16\n" +
	"\x12DATASOURCE_YOUTUBE\x10\x02*\x85\x01\n" +
	"\x13OAuthExchangeStatus\x12&\n" +
	"\"O_AUTH_EXCHANGE_STATUS_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1eO_AUTH_EXCHANGE_STATUS_SUCCESS\x10\x01\x12\"\n" +
	"\x1eO_AUTH_EXCHANGE_STATUS_FAILURE\x10\x022\xec\x02\n" +
	"\x11DatasourceService\x12X\n" +
	"\x11ExchangeOAuthCode\x12 .myncer.ExchangeOAuthCodeRequest\x1a!.myncer.ExchangeOAuthCodeResponse\x12R\n" +
	"\x0fListDatasources\x12\x1e.myncer.ListDatasourcesRequest\x1a\x1f.myncer.ListDatasourcesResponse\x12L\n" +
	"\rListPlaylists\x12\x1c.myncer.ListPlaylistsRequest\x1a\x1d.myncer.ListPlaylistsResponse\x12[\n" +
	"\x12GetPlaylistDetails\x12!.myncer.GetPlaylistDetailsRequest\x1a\".myncer.GetPlaylistDetailsResponseB3Z1github.com/hansbala/myncer/proto/myncer;myncer_pbb\x06proto3"

var (
	file_myncer_datasource_proto_rawDescOnce sync.Once
	file_myncer_datasource_proto_rawDescData []byte
)

func file_myncer_datasource_proto_rawDescGZIP() []byte {
	file_myncer_datasource_proto_rawDescOnce.Do(func() {
		file_myncer_datasource_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_myncer_datasource_proto_rawDesc), len(file_myncer_datasource_proto_rawDesc)))
	})
	return file_myncer_datasource_proto_rawDescData
}

var file_myncer_datasource_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_myncer_datasource_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_myncer_datasource_proto_goTypes = []any{
	(Datasource)(0),                    // 0: myncer.Datasource
	(OAuthExchangeStatus)(0),           // 1: myncer.OAuthExchangeStatus
	(*ExchangeOAuthCodeRequest)(nil),   // 2: myncer.ExchangeOAuthCodeRequest
	(*ExchangeOAuthCodeResponse)(nil),  // 3: myncer.ExchangeOAuthCodeResponse
	(*ListDatasourcesRequest)(nil),     // 4: myncer.ListDatasourcesRequest
	(*ListDatasourcesResponse)(nil),    // 5: myncer.ListDatasourcesResponse
	(*ListPlaylistsRequest)(nil),       // 6: myncer.ListPlaylistsRequest
	(*Playlist)(nil),                   // 7: myncer.Playlist
	(*ListPlaylistsResponse)(nil),      // 8: myncer.ListPlaylistsResponse
	(*GetPlaylistDetailsRequest)(nil),  // 9: myncer.GetPlaylistDetailsRequest
	(*GetPlaylistDetailsResponse)(nil), // 10: myncer.GetPlaylistDetailsResponse
	(*MusicSource)(nil),                // 11: myncer.MusicSource
}
var file_myncer_datasource_proto_depIdxs = []int32{
	0,  // 0: myncer.ExchangeOAuthCodeRequest.datasource:type_name -> myncer.Datasource
	1,  // 1: myncer.ExchangeOAuthCodeResponse.oauth_exchange_status:type_name -> myncer.OAuthExchangeStatus
	0,  // 2: myncer.ListDatasourcesResponse.datasources:type_name -> myncer.Datasource
	0,  // 3: myncer.ListPlaylistsRequest.datasource:type_name -> myncer.Datasource
	11, // 4: myncer.Playlist.music_source:type_name -> myncer.MusicSource
	7,  // 5: myncer.ListPlaylistsResponse.playlist:type_name -> myncer.Playlist
	0,  // 6: myncer.GetPlaylistDetailsRequest.datasource:type_name -> myncer.Datasource
	7,  // 7: myncer.GetPlaylistDetailsResponse.playlist:type_name -> myncer.Playlist
	0,  // 8: myncer.MusicSource.datasource:type_name -> myncer.Datasource
	2,  // 9: myncer.DatasourceService.ExchangeOAuthCode:input_type -> myncer.ExchangeOAuthCodeRequest
	4,  // 10: myncer.DatasourceService.ListDatasources:input_type -> myncer.ListDatasourcesRequest
	6,  // 11: myncer.DatasourceService.ListPlaylists:input_type -> myncer.ListPlaylistsRequest
	9,  // 12: myncer.DatasourceService.GetPlaylistDetails:input_type -> myncer.GetPlaylistDetailsRequest
	3,  // 13: myncer.DatasourceService.ExchangeOAuthCode:output_type -> myncer.ExchangeOAuthCodeResponse
	5,  // 14: myncer.DatasourceService.ListDatasources:output_type -> myncer.ListDatasourcesResponse
	8,  // 15: myncer.DatasourceService.ListPlaylists:output_type -> myncer.ListPlaylistsResponse
	10, // 16: myncer.DatasourceService.GetPlaylistDetails:output_type -> myncer.GetPlaylistDetailsResponse
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_myncer_datasource_proto_init() }
func file_myncer_datasource_proto_init() {
	if File_myncer_datasource_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_myncer_datasource_proto_rawDesc), len(file_myncer_datasource_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_myncer_datasource_proto_goTypes,
		DependencyIndexes: file_myncer_datasource_proto_depIdxs,
		EnumInfos:         file_myncer_datasource_proto_enumTypes,
		MessageInfos:      file_myncer_datasource_proto_msgTypes,
	}.Build()
	File_myncer_datasource_proto = out.File
	file_myncer_datasource_proto_goTypes = nil
	file_myncer_datasource_proto_depIdxs = nil
}
