// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: myncer/oauth_token.proto

package myncer_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents an OAuth token issued by a datasource.
type OAuthToken struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// google/uuid generated UUID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Myncer user id.
	UserId       string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AccessToken  string                 `protobuf:"bytes,3,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken string                 `protobuf:"bytes,4,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	TokenType    string                 `protobuf:"bytes,5,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	ExpiresAt    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Datasource   Datasource             `protobuf:"varint,8,opt,name=datasource,proto3,enum=myncer.Datasource" json:"datasource,omitempty"`
	// Cached datasource-specific user information
	DatasourceUserId          string `protobuf:"bytes,11,opt,name=datasource_user_id,json=datasourceUserId,proto3" json:"datasource_user_id,omitempty"`
	DatasourceUserCountryCode string `protobuf:"bytes,12,opt,name=datasource_user_country_code,json=datasourceUserCountryCode,proto3" json:"datasource_user_country_code,omitempty"`
	// Metadata which is fetched from SQL (for it's ACID compliance).
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OAuthToken) Reset() {
	*x = OAuthToken{}
	mi := &file_myncer_oauth_token_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OAuthToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuthToken) ProtoMessage() {}

func (x *OAuthToken) ProtoReflect() protoreflect.Message {
	mi := &file_myncer_oauth_token_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAuthToken.ProtoReflect.Descriptor instead.
func (*OAuthToken) Descriptor() ([]byte, []int) {
	return file_myncer_oauth_token_proto_rawDescGZIP(), []int{0}
}

func (x *OAuthToken) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OAuthToken) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OAuthToken) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *OAuthToken) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *OAuthToken) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *OAuthToken) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *OAuthToken) GetDatasource() Datasource {
	if x != nil {
		return x.Datasource
	}
	return Datasource_DATASOURCE_UNSPECIFIED
}

func (x *OAuthToken) GetDatasourceUserId() string {
	if x != nil {
		return x.DatasourceUserId
	}
	return ""
}

func (x *OAuthToken) GetDatasourceUserCountryCode() string {
	if x != nil {
		return x.DatasourceUserCountryCode
	}
	return ""
}

func (x *OAuthToken) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OAuthToken) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_myncer_oauth_token_proto protoreflect.FileDescriptor

const file_myncer_oauth_token_proto_rawDesc = "" +
	"\n" +
	"\x18myncer/oauth_token.proto\x12\x06myncer\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17myncer/datasource.proto\"\xf6\x03\n" +
	"\n" +
	"OAuthToken\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12!\n" +
	"\faccess_token\x18\x03 \x01(\tR\vaccessToken\x12#\n" +
	"\rrefresh_token\x18\x04 \x01(\tR\frefreshToken\x12\x1d\n" +
	"\n" +
	"token_type\x18\x05 \x01(\tR\ttokenType\x129\n" +
	"\n" +
	"expires_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x122\n" +
	"\n" +
	"datasource\x18\b \x01(\x0e2\x12.myncer.DatasourceR\n" +
	"datasource\x12,\n" +
	"\x12datasource_user_id\x18\v \x01(\tR\x10datasourceUserId\x12?\n" +
	"\x1cdatasource_user_country_code\x18\f \x01(\tR\x19datasourceUserCountryCode\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAtJ\x04\b\x06\x10\aB3Z1github.com/hansbala/myncer/proto/myncer;myncer_pbb\x06proto3"

var (
	file_myncer_oauth_token_proto_rawDescOnce sync.Once
	file_myncer_oauth_token_proto_rawDescData []byte
)

func file_myncer_oauth_token_proto_rawDescGZIP() []byte {
	file_myncer_oauth_token_proto_rawDescOnce.Do(func() {
		file_myncer_oauth_token_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_myncer_oauth_token_proto_rawDesc), len(file_myncer_oauth_token_proto_rawDesc)))
	})
	return file_myncer_oauth_token_proto_rawDescData
}

var file_myncer_oauth_token_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_myncer_oauth_token_proto_goTypes = []any{
	(*OAuthToken)(nil),            // 0: myncer.OAuthToken
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
	(Datasource)(0),               // 2: myncer.Datasource
}
var file_myncer_oauth_token_proto_depIdxs = []int32{
	1, // 0: myncer.OAuthToken.expires_at:type_name -> google.protobuf.Timestamp
	2, // 1: myncer.OAuthToken.datasource:type_name -> myncer.Datasource
	1, // 2: myncer.OAuthToken.created_at:type_name -> google.protobuf.Timestamp
	1, // 3: myncer.OAuthToken.updated_at:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_myncer_oauth_token_proto_init() }
func file_myncer_oauth_token_proto_init() {
	if File_myncer_oauth_token_proto != nil {
		return
	}
	file_myncer_datasource_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_myncer_oauth_token_proto_rawDesc), len(file_myncer_oauth_token_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_myncer_oauth_token_proto_goTypes,
		DependencyIndexes: file_myncer_oauth_token_proto_depIdxs,
		MessageInfos:      file_myncer_oauth_token_proto_msgTypes,
	}.Build()
	File_myncer_oauth_token_proto = out.File
	file_myncer_oauth_token_proto_goTypes = nil
	file_myncer_oauth_token_proto_depIdxs = nil
}
